{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app.min.js","src/app/app.js","src/app/controllers/CollectCtrl.js","src/app/controllers/SelectCtrl.js","src/app/filters/featureFilter.js","src/app/filters/labelFilter.js","src/app/services/ModelService.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_interopRequireDefault","obj","__esModule","default","_controllersSelectCtrl","_controllersSelectCtrl2","_controllersCollectCtrl","_controllersCollectCtrl2","_servicesModelService","_servicesModelService2","_filtersFeatureFilter","_filtersFeatureFilter2","_filtersLabelFilter","_filtersLabelFilter2","angular","value","service","controller","filter","features","labels","getFeatures","getLabels","setConfig","_features","_labels","config","$httpProvider","$stateProvider","$urlRouterProvider","state","url","templateUrl","otherwise","./controllers/CollectCtrl","./controllers/SelectCtrl","./filters/featureFilter","./filters/labelFilter","./services/ModelService",2,"Object","defineProperty","$scope","$filter","$location","$templateRequest","$sce","host","sharedConfig","ua","detect","parse","navigator","userAgent","sandbox","send","data","console","log","useragent","device","manufacturer","name","browser","family","major","text","sensor","replace","sensorData","substring","req","XMLHttpRequest","open","setRequestHeader","HTML","sensors","forEach","key","html","then","sensorHTML","trustAsHtml","fileLocation","onreadystatechange","eval","client","responseText","window","feature","push","timerRunning","start","deadline","$broadcast","stop","path",3,"ModelService","$watch","newVal","oldVal","scope","loadLabels","$query","response","series","results","concat","apply","map","values","x","indexOf","label","toLowerCase","next",4,"_toConsumableArray","arr","Array","isArray","arr2","from","featureFilter","input","result","entry","Set","support","Modernizr",5,"labelFilter",6,"_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","$http","$q","this","$host","$inject","deferred","defer","get","resolve","promise","method","params","db","q"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _controllersSelectCtrl = require('./controllers/SelectCtrl');\n\nvar _controllersSelectCtrl2 = _interopRequireDefault(_controllersSelectCtrl);\n\nvar _controllersCollectCtrl = require('./controllers/CollectCtrl');\n\nvar _controllersCollectCtrl2 = _interopRequireDefault(_controllersCollectCtrl);\n\nvar _servicesModelService = require('./services/ModelService');\n\nvar _servicesModelService2 = _interopRequireDefault(_servicesModelService);\n\nvar _filtersFeatureFilter = require('./filters/featureFilter');\n\nvar _filtersFeatureFilter2 = _interopRequireDefault(_filtersFeatureFilter);\n\nvar _filtersLabelFilter = require('./filters/labelFilter');\n\nvar _filtersLabelFilter2 = _interopRequireDefault(_filtersLabelFilter);\n\nangular.module('myApp', ['ui.bootstrap', 'ui.router', 'ngTagsInput', 'timer']).value('host', 'jactivity-influx.teco.edu').service('ModelService', _servicesModelService2['default']).controller('SelectCtrl', _controllersSelectCtrl2['default']).controller('CollectCtrl', _controllersCollectCtrl2['default']).filter('feature', _filtersFeatureFilter2['default']).filter('label', _filtersLabelFilter2['default']).service('sharedConfig', function () {\n  var features = {};\n  var labels = {};\n\n  return {\n    getFeatures: function getFeatures() {\n      return features;\n    },\n    getLabels: function getLabels() {\n      return labels;\n    },\n    setConfig: function setConfig(_features, _labels) {\n      features = _features;\n      labels = _labels;\n    }\n  };\n}).config(['$httpProvider', '$stateProvider', '$urlRouterProvider', function ($httpProvider, $stateProvider, $urlRouterProvider) {\n\n  $stateProvider.state('select', {\n    url: '/select',\n    templateUrl: 'select.html',\n    controller: 'SelectCtrl'\n  }).state('collect', {\n    url: '/collect',\n    templateUrl: 'collect.html',\n    controller: 'CollectCtrl'\n  });\n\n  $urlRouterProvider.otherwise('/select');\n}]);\n\n},{\"./controllers/CollectCtrl\":2,\"./controllers/SelectCtrl\":3,\"./filters/featureFilter\":4,\"./filters/labelFilter\":5,\"./services/ModelService\":6}],2:[function(require,module,exports){\n/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports[\"default\"] = function ($scope, $filter, $location, $templateRequest, $sce, host, sharedConfig) {\n  'ngInject';\n\n  /* Get previously defined features and labels */\n  var features = sharedConfig.getFeatures();\n  var labels = sharedConfig.getLabels();\n\n  /* Parse UserAgent using darcyclarke/Detect.js */\n  var ua = detect.parse(navigator.userAgent);\n\n  /* Sandbox for all feature collect scripts */\n  var sandbox = {\n    send: function send(data) {\n      console.log(data);\n      var useragent = ua.device.manufacturer + \"_\" + ua.device.name + \"_\" + ua.browser.family + \"_\" + ua.browser.major;\n      var text = data.sensor + \",label=\" + labels + \",useragent=\" + useragent.replace(/\\s/g, '') + \" \";\n      delete data.sensor;\n      for (var sensorData in data) {\n        text += sensorData + \"=\" + data[sensorData] + \",\";\n      }\n      text = text.substring(0, text.length - 1);\n      var req = new XMLHttpRequest();\n      req.open('POST', \"http://\" + host + \"/influxdb/write?db=jactivity\");\n      req.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n      req.send(text);\n    }\n  };\n\n  $scope.HTML = \"\";\n\n  var sensors = [];\n\n  features.forEach(function (key) {\n    if (typeof key.html != \"undefined\" && key.html !== \"\") {\n      console.log(\"html/\" + key.html);\n\n      $templateRequest(\"html/\" + key.html).then(function (html) {\n        $scope.sensorHTML = $sce.trustAsHtml(html);\n      });\n    }\n    //$scope.HTML = $scope.HTML + $templateCache.get(\"html/\" + key.html);\n    /*\n    \t\t// DOM: Create the script element\n    \t    var jsElm = document.createElement(\"script\");\n    \t    // set the type attribute\n    \t    jsElm.type = \"application/javascript\";\n    \t    // make the script element load file\n    \t    jsElm.src = \"scripts/\" + key.script;\n    \t    // finally insert the element to the body element in order to load the script\n    \t    document.body.appendChild(jsElm);\n      \t\tjsElm.onload = function() {\n     \t\t};*/\n    //inject.js(\"scripts/\" + key.script, function() {\n\n    var req = new XMLHttpRequest();\n    var fileLocation = '../sensors/' + key.name + '/' + key.name + '.js';\n    req.open('GET', fileLocation);\n    req.onreadystatechange = function () {\n      eval(client.responseText);\n    };\n\n    var sensor = new window[key.feature](sandbox);\n    sensors.push(sensor);\n    //});\n  });\n\n  $scope.timerRunning = false;\n\n  $scope.start = function (deadline) {\n    $scope.$broadcast('timer-start');\n    $scope.timerRunning = true;\n    sensors.forEach(function (sensor) {\n      sensor.start();\n    });\n  };\n\n  $scope.stop = function () {\n    console.log(\"stop\");\n    $scope.timerRunning = false;\n    sensors.forEach(function (sensor) {\n      sensor.stop();\n      delete window.sensor;\n    });\n    $location.path(\"/sensor\");\n  };\n};\n\nmodule.exports = exports[\"default\"];\n\n},{}],3:[function(require,module,exports){\n/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function ($scope, $filter, $location, ModelService, host, sharedConfig) {\n  'ngInject';\n  /* Parse UserAgent using darcyclarke/Detect.js */\n  $scope.ua = detect.parse(navigator.userAgent);\n\n  /* Get Features using AJAX and generate sensor dependency list */\n  $scope.features = [];\n  $scope.sensors = [];\n\n  ModelService.getFeatures().then(function (data) {\n    $scope.features = data.data;\n    $scope.sensors = $filter('feature')($scope.features.sensors);\n  });\n\n  /* Watch for newly selected features and change sensor depency list accordingly */\n  $scope.$watch('features', function (newVal, oldVal, scope) {\n    $scope.sensors = $filter('feature')($scope.features.sensors);\n  }, true);\n\n  /* Get Labels and prepare them using mbenford/ngTagsInput */\n  $scope.labels = [];\n\n  $scope.loadLabels = function ($query) {\n    return ModelService.getLabels().then(function (response) {\n      var series = response.data.results[0].series;\n      //var labels = response.data;\n      var data = [].concat.apply([], series.map(function (e) {\n        return e.values.filter(function (x) {\n          return x[0] === 'label';\n        }).map(function (x) {\n          return x[1];\n        });\n      })).filter(function (e, i, s) {\n        return s.indexOf(e) === i;\n      });\n      //const labels = [];\n      //var labels = series.map(e=>e.values.filter(x=>x[0]==='label').map(x=>x[1])).reduce((a,b)=>a.IndexOf(b)<0?a.concat(b):a);\n      var labels = data.map(function (e) {\n        return { name: e };\n      });\n      //series.forEach(e => e.values.forEach(v => { if (v[0] === 'label' && labels.indexOf(v[1]) === -1) labels.push({name: v[1]});}));\n      return labels.filter(function (label) {\n        return label.name.toLowerCase().indexOf($query.toLowerCase()) != -1;\n      });\n    });\n  };\n\n  /* Advance to collect page */\n  $scope.next = function () {\n    /* Only pass on selected features */\n    var features = $filter('filter')($scope.features.sensors, {\n      value: true\n    });\n\n    sharedConfig.setConfig(features, $scope.labels);\n    $location.path(\"/collect\");\n  };\n};\n\nmodule.exports = exports['default'];\n\n},{}],4:[function(require,module,exports){\n/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = featureFilter;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nfunction featureFilter() {\n  return function (input) {\n    if (typeof input !== 'undefined') {\n      var result = [];\n      input.forEach(function (entry) {\n        if (entry.value === true) {\n          result.push(entry.feature);\n        }\n      });\n      result = [].concat(_toConsumableArray(new Set(result)));\n      var features = [];\n      result.forEach(function (entry) {\n        var feature = {};\n        feature.name = entry;\n        feature.support = Modernizr[entry];\n        features.push(feature);\n      });\n      return features;\n    }\n  };\n}\n\nmodule.exports = exports['default'];\n\n},{}],5:[function(require,module,exports){\n/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = labelFilter;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nfunction labelFilter() {\n  return function (input) {\n    if (typeof input !== 'undefined') {\n      var result = [];\n      input.forEach(function (entry) {\n        if (entry.value === true) {\n          result.concat(entry.sensors);\n        }\n      });\n      result = [].concat(_toConsumableArray(new Set(result)));\n      var sensors = [];\n      result.forEach(function (entry) {\n        var sensor = {};\n        sensor.name = entry;\n        sensor.support = Modernizr[entry];\n        sensors.push(sensor);\n      });\n      return sensors;\n    }\n  };\n}\n\nmodule.exports = exports['default'];\n\n},{}],6:[function(require,module,exports){\n/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar ModelService = (function () {\n\n  /*@ngInject*/\n\n  function ModelService($http, $q, host) {\n    _classCallCheck(this, ModelService);\n\n    this.$http = $http;\n    this.$q = $q;\n    this.$host = host;\n  }\n\n  _createClass(ModelService, [{\n    key: 'getFeatures',\n    value: function getFeatures() {\n      var deferred = this.$q.defer();\n      this.$http.get('http://' + this.$host + '/sensors/sensors.json').then(function (data) {\n        deferred.resolve(data);\n      });\n\n      return deferred.promise;\n    }\n  }, {\n    key: 'getLabels',\n    value: function getLabels() {\n      var deferred = this.$q.defer();\n      var req = {\n        method: 'GET',\n        url: 'http://' + this.$host + '/influxdb/query',\n        params: { db: 'jactivity',\n          q: 'SHOW TAG VALUES WITH KEY IN (label)' }\n      };\n      this.$http(req).then(function (data) {\n        deferred.resolve(data);\n      });\n\n      return deferred.promise;\n    }\n  }]);\n\n  return ModelService;\n})();\n\nexports['default'] = ModelService;\nmodule.exports = exports['default'];\n\n},{}]},{},[1])\n\n","/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\nimport SelectCtrl from './controllers/SelectCtrl';\nimport CollectCtrl from './controllers/CollectCtrl';\nimport ModelService from './services/ModelService';\nimport featureFilter from './filters/featureFilter';\nimport labelFilter from './filters/labelFilter';\n\nangular.module('myApp', ['ui.bootstrap', 'ui.router', 'ngTagsInput', 'timer'])\n\t.value('host', 'jactivity-influx.teco.edu')\n\t.service('ModelService', ModelService)\n\t.controller('SelectCtrl', SelectCtrl)\n\t.controller('CollectCtrl', CollectCtrl)\n\t.filter('feature', featureFilter)\n\t.filter('label', labelFilter)\n\t.service('sharedConfig', function () {\n        var features = {};\n        var labels = {};\n\n        return {\n            getFeatures: function () {\n                return features;\n            },\n            getLabels: function () {\n                return labels;\n            },\n            setConfig: function(_features, _labels) {\n                features = _features;\n                labels = _labels;\n            }\n        };\n\t })\n\t.config(['$httpProvider', '$stateProvider', '$urlRouterProvider',\n  function($httpProvider, $stateProvider, $urlRouterProvider) {\n\n    $stateProvider\n      .state('select', {\n        url: '/select',\n        templateUrl: 'select.html',\n        controller: 'SelectCtrl'\n      })\n      .state('collect', {\n        url: '/collect',\n        templateUrl: 'collect.html',\n        controller: 'CollectCtrl',\n      });\n\n    $urlRouterProvider.otherwise('/select');\n  }\n]);\n","/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\nexport default function($scope, $filter, $location, $templateRequest, $sce, host, sharedConfig) {\n  'ngInject';\n\n  /* Get previously defined features and labels */\n  var features = sharedConfig.getFeatures();\n  var labels = sharedConfig.getLabels();\n\n  /* Parse UserAgent using darcyclarke/Detect.js */\n  var ua = detect.parse(navigator.userAgent);\n\n  /* Sandbox for all feature collect scripts */\n  var sandbox = {\n    send: function(data) {\n      console.log(data);\n      var useragent = ua.device.manufacturer + \"_\" + ua.device.name + \"_\" + ua.browser.family + \"_\" + ua.browser.major;\n      var text = data.sensor + \",label=\" + labels + \",useragent=\" + useragent.replace(/\\s/g,'') + \" \";\n      delete data.sensor;\n      for(var sensorData in data) {\n        text += sensorData + \"=\" + data[sensorData] + \",\";\n      }\n      text = text.substring(0, text.length - 1);\n      var req = new XMLHttpRequest();\n      req.open('POST', \"http://\" + host + \"/influxdb/write?db=jactivity\");\n      req.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n      req.send(text);\n    }\n  };\n\n  $scope.HTML = \"\";\n\n  var sensors = [];\n\n  features.forEach(function(key) {\n    if (typeof(key.html) != \"undefined\" && key.html !== \"\") {\n      console.log(\"html/\" + key.html);\n\n      $templateRequest(\"html/\" + key.html).then(function(html) {\n        $scope.sensorHTML = $sce.trustAsHtml(html);\n      });\n    }\n    //$scope.HTML = $scope.HTML + $templateCache.get(\"html/\" + key.html);\n    /*\n    \t\t// DOM: Create the script element\n    \t    var jsElm = document.createElement(\"script\");\n    \t    // set the type attribute\n    \t    jsElm.type = \"application/javascript\";\n    \t    // make the script element load file\n    \t    jsElm.src = \"scripts/\" + key.script;\n    \t    // finally insert the element to the body element in order to load the script\n    \t    document.body.appendChild(jsElm);\n\n\n    \t\tjsElm.onload = function() {\n\n    \t\t};*/\n    //inject.js(\"scripts/\" + key.script, function() {\n\n    var req = new XMLHttpRequest();\n    var fileLocation = '../sensors/' + key.name + '/' + key.name + '.js';\n    req.open('GET', fileLocation);\n    req.onreadystatechange = function() {\n      eval(client.responseText);\n    };\n\n    var sensor = new window[key.feature](sandbox);\n    sensors.push(sensor);\n    //});\n  });\n\n  $scope.timerRunning = false;\n\n  $scope.start = function(deadline) {\n    $scope.$broadcast('timer-start');\n    $scope.timerRunning = true;\n    sensors.forEach(function(sensor) {\n      sensor.start();\n    });\n  };\n\n  $scope.stop = function() {\n    console.log(\"stop\");\n    $scope.timerRunning = false;\n    sensors.forEach(function(sensor) {\n      sensor.stop();\n      delete window.sensor;\n    });\n    $location.path(\"/sensor\");\n  };\n\n}\n","/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\nexport default function($scope, $filter, $location, ModelService, host, sharedConfig) {\n  'ngInject';\n  /* Parse UserAgent using darcyclarke/Detect.js */\n  $scope.ua = detect.parse(navigator.userAgent);\n\n  /* Get Features using AJAX and generate sensor dependency list */\n  $scope.features = [];\n  $scope.sensors = [];\n\n  ModelService.getFeatures().then(function(data) {\n    $scope.features = data.data;\n    $scope.sensors = $filter('feature')($scope.features.sensors);\n  });\n\n  /* Watch for newly selected features and change sensor depency list accordingly */\n  $scope.$watch('features', function(newVal, oldVal, scope) {\n    $scope.sensors = $filter('feature')($scope.features.sensors);\n  }, true);\n\n\n  /* Get Labels and prepare them using mbenford/ngTagsInput */\n  $scope.labels = [];\n\n  $scope.loadLabels = function($query) {\n    return ModelService.getLabels().then(function(response) {\n\t  const series = response.data.results[0].series;\n      //var labels = response.data;\n      var data = [].concat.apply([], series.map(e=>e.values.filter(x=>x[0]==='label').map(x=>x[1]))).filter((e,i,s)=>s.indexOf(e)===i);\n      //const labels = [];\n      //var labels = series.map(e=>e.values.filter(x=>x[0]==='label').map(x=>x[1])).reduce((a,b)=>a.IndexOf(b)<0?a.concat(b):a);\n      var labels = data.map(e=> ({name:e}));\n\t  //series.forEach(e => e.values.forEach(v => { if (v[0] === 'label' && labels.indexOf(v[1]) === -1) labels.push({name: v[1]});}));\n      return labels.filter(function(label) {\n        return label.name.toLowerCase().indexOf($query.toLowerCase()) != -1;\n      });\n    });\n  };\n\n  /* Advance to collect page */\n  $scope.next = function() {\n    /* Only pass on selected features */\n    var features = $filter('filter')($scope.features.sensors, {\n      value: true\n    });\n\n    sharedConfig.setConfig(features, $scope.labels);\n    $location.path(\"/collect\");\n  };\n\n}\n","/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\nexport default function featureFilter() {\n  return function(input) {\n    if (typeof input !== 'undefined') {\n      var result = [];\n      input.forEach(function(entry) {\n        if (entry.value === true) {\n          result.push(entry.feature);\n        }\n      });\n      result = [...new Set(result)];\n      var features = [];\n      result.forEach(function(entry) {\n        var feature = {};\n        feature.name = entry;\n        feature.support = Modernizr[entry];\n        features.push(feature);\n      });\n      return features;\n    }\n  };\n}\n","/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\nexport default function labelFilter() {\n  return function(input) {\n    if (typeof input !== 'undefined') {\n      var result = [];\n      input.forEach(function(entry) {\n        if (entry.value === true) {\n          result.concat(entry.sensors);\n        }\n      });\n      result = [...new Set(result)];\n      var sensors = [];\n      result.forEach(function(entry) {\n        var sensor = {};\n        sensor.name = entry;\n        sensor.support = Modernizr[entry];\n        sensors.push(sensor);\n      });\n      return sensors;\n    }\n  };\n}\n","/*\n\tCopyright 2016 KIT Institute for Telematics TecO - David Greiner\n\tThis file is subject to the terms and conditions defined in\n\tfile 'LICENSE', which is part of this source code package.\n*/\n\nexport default class ModelService {\n\n  /*@ngInject*/\n  constructor($http, $q, host) {\n    this.$http = $http;\n    this.$q = $q;\n    this.$host = host;\n  }\n\n  getFeatures() {\n    var deferred = this.$q.defer();\n    this.$http.get('http://' + this.$host + '/sensors/sensors.json').then(function(data) {\n      deferred.resolve(data);\n    });\n\n    return deferred.promise;\n  }\n  getLabels() {\n    var deferred = this.$q.defer();\n    var req = {\n\t  method: 'GET',\n\t  url: 'http://' + this.$host + '/influxdb/query',\n\t  params: { db: 'jactivity',\n\t\t  \t\tq: 'SHOW TAG VALUES WITH KEY IN (label)' }\n\t};\n    this.$http(req).then(function(data) {\n      deferred.resolve(data);\n    });\n\n    return deferred.promise;\n  }\n}\n"],"sourceRoot":"/source/"}