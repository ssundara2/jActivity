{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","app.min.js","src/app/app.js","src/app/controllers/ButtonsCtrl.js","src/app/controllers/SensorCtrl.js","src/app/filters/labelFilter.js","src/app/filters/sensorFilter.js","src/app/services/ModelService.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_interopRequireDefault","obj","__esModule","default","_controllersButtonsCtrl","_controllersButtonsCtrl2","_controllersSensorCtrl","_controllersSensorCtrl2","_servicesModelService","_servicesModelService2","_filtersSensorFilter","_filtersSensorFilter2","_filtersLabelFilter","_filtersLabelFilter2","angular","service","controller","filter","features","labels","getFeatures","getLabels","setConfig","_features","_labels","config","$httpProvider","$stateProvider","$urlRouterProvider","state","url","templateUrl","otherwise","./controllers/ButtonsCtrl","./controllers/SensorCtrl","./filters/labelFilter","./filters/sensorFilter","./services/ModelService",2,"Object","defineProperty","value","$scope","$filter","$location","ModelService","sharedConfig","machineReadableString","string","replace","toLowerCase","ua","detect","parse","navigator","userAgent","sensors","then","data","$watch","newVal","oldVal","scope","loadLabels","$query","response","label","name","indexOf","next","forEach","index","json","JSON","stringify","req","XMLHttpRequest","open","setRequestHeader","send","push","path",3,"$templateRequest","$sce","console","log","uniqid","pr","en","this","seed","w","parseInt","toString","slice","Array","join","Date","getTime","Math","floor","random","toFixed","sandbox","id","timestamp","now","useragent","device","manufacturer","browser","family","major","sensor","HTML","key","html","sensorHTML","trustAsHtml","window","feature","timerRunning","start","deadline","$broadcast","stop",4,"_toConsumableArray","arr","isArray","arr2","from","labelFilter","input","result","entry","concat","Set","support","Modernizr",5,"sensorFilter",6,"_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","prototype","$http","$q","$inject","deferred","defer","get","resolve","promise"],"mappings":"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","file":"app.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/*\n  Import all Angular components via ES6 imports and register them\n  at your module via their corresponding functions (controller, service, etc.).\n  Copyright 2016 KIT Institute for Telematics TecO - David Greiner\n*/\n\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _controllersButtonsCtrl = require('./controllers/ButtonsCtrl');\n\nvar _controllersButtonsCtrl2 = _interopRequireDefault(_controllersButtonsCtrl);\n\nvar _controllersSensorCtrl = require('./controllers/SensorCtrl');\n\nvar _controllersSensorCtrl2 = _interopRequireDefault(_controllersSensorCtrl);\n\nvar _servicesModelService = require('./services/ModelService');\n\nvar _servicesModelService2 = _interopRequireDefault(_servicesModelService);\n\nvar _filtersSensorFilter = require('./filters/sensorFilter');\n\nvar _filtersSensorFilter2 = _interopRequireDefault(_filtersSensorFilter);\n\nvar _filtersLabelFilter = require('./filters/labelFilter');\n\nvar _filtersLabelFilter2 = _interopRequireDefault(_filtersLabelFilter);\n\nangular.module('myApp', ['ui.bootstrap', 'ui.router', 'ngTagsInput', 'timer']).service('ModelService', _servicesModelService2['default']).controller('ButtonsCtrl', _controllersButtonsCtrl2['default']).controller('SensorCtrl', _controllersSensorCtrl2['default']).filter('sensor', _filtersSensorFilter2['default']).filter('label', _filtersLabelFilter2['default']).service('sharedConfig', function () {\n  var features = {};\n  var labels = {};\n\n  return {\n    getFeatures: function getFeatures() {\n      return features;\n    },\n    getLabels: function getLabels() {\n      return labels;\n    },\n    setConfig: function setConfig(_features, _labels) {\n      features = _features;\n      labels = _labels;\n    }\n  };\n}).config(['$httpProvider', '$stateProvider', '$urlRouterProvider', function ($httpProvider, $stateProvider, $urlRouterProvider) {\n\n  $stateProvider.state('collect', {\n    url: '/collect',\n    templateUrl: 'collect.html',\n    controller: 'ButtonsCtrl'\n  }).state('sensor', {\n    url: '/sensor',\n    templateUrl: 'sensor.html',\n    controller: 'SensorCtrl'\n  });\n\n  $urlRouterProvider.otherwise('/collect');\n}]);\n\n},{\"./controllers/ButtonsCtrl\":2,\"./controllers/SensorCtrl\":3,\"./filters/labelFilter\":4,\"./filters/sensorFilter\":5,\"./services/ModelService\":6}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function ($scope, $filter, $location, ModelService, sharedConfig) {\n  'ngInject';\n\n  $scope.ua = detect.parse(navigator.userAgent);\n\n  $scope.features = [];\n  $scope.sensors = [];\n\n  ModelService.getFeatures().then(function (data) {\n    $scope.features = data;\n    $scope.sensors = $filter('sensor')($scope.features.data);\n  });\n\n  $scope.$watch('features', function (newVal, oldVal, scope) {\n    $scope.sensors = $filter('sensor')($scope.features.data);\n  }, true);\n\n  function machineReadableString(string) {\n    return string.replace(/([^a-z0-9]+)/gi, '-').toLowerCase();\n  }\n\n  $scope.labels = [];\n\n  $scope.loadLabels = function ($query) {\n    return ModelService.getLabels().then(function (response) {\n      var labels = response.data;\n      return labels.filter(function (label) {\n        return label.name.toLowerCase().indexOf($query.toLowerCase()) != -1;\n      });\n    });\n  };\n\n  $scope.next = function () {\n    var labels = [];\n    $scope.labels.forEach(function (label, index) {\n      if (typeof label.label === 'undefined') {\n        $scope.labels[index].label = machineReadableString(label.name);\n        var data = {\n          label: label.label,\n          name: label.name\n        };\n        var json = JSON.stringify(data);\n        if (json !== '{}') {\n          var req = new XMLHttpRequest();\n          req.open('POST', \"http://docker.teco.edu:3000/api/labels\");\n          req.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n          req.send(json);\n        }\n      }\n      labels.push(label.label);\n    });\n\n    var features = $filter('filter')($scope.features.data, {\n      value: true\n    });\n\n    sharedConfig.setConfig(features, labels);\n    $location.path(\"/sensor\");\n  };\n};\n\nmodule.exports = exports['default'];\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nexports['default'] = function ($scope, $filter, $location, $templateRequest, $sce, sharedConfig) {\n\t'ngInject';\n\n\tvar features = sharedConfig.getFeatures();\n\tvar labels = sharedConfig.getLabels();\n\n\tconsole.log(features);\n\n\tvar pr = '',\n\t    en = false,\n\t    uniqid;\n\n\tthis.seed = function (s, w) {\n\t\ts = parseInt(s, 10).toString(16);\n\t\treturn w < s.length ? s.slice(s.length - w) : w > s.length ? new Array(1 + (w - s.length)).join('0') + s : s;\n\t};\n\n\tuniqid = pr + this.seed(parseInt(new Date().getTime() / 1000, 10), 8) + this.seed(Math.floor(Math.random() * 0x75bcd15) + 1, 5);\n\n\tif (en) uniqid += (Math.random() * 10).toFixed(8).toString();\n\n\tvar ua = detect.parse(navigator.userAgent);\n\n\tvar sandbox = {\n\t\tsend: function send(data) {\n\t\t\tconsole.log(data);\n\t\t\tdata.id = uniqid;\n\t\t\tdata.timestamp = Date.now();\n\t\t\tdata.useragent = ua.device.manufacturer + \"_\" + ua.device.name + \"_\" + ua.browser.family + \"_\" + ua.browser.major;\n\t\t\tlabels.forEach(function (label) {\n\t\t\t\tdata.label = label;\n\t\t\t\tvar json = JSON.stringify(data);\n\t\t\t\tif (json !== '{}') {\n\t\t\t\t\tvar req = new XMLHttpRequest();\n\t\t\t\t\treq.open('POST', \"http://docker.teco.edu:3000/api/features/\" + data.sensor);\n\t\t\t\t\treq.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n\t\t\t\t\treq.send(json);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t$scope.HTML = \"\";\n\n\tvar sensors = [];\n\n\tfeatures.forEach(function (key) {\n\t\tif (typeof key.html != \"undefined\" && key.html !== \"\") {\n\t\t\tconsole.log(\"html/\" + key.html);\n\n\t\t\t$templateRequest(\"html/\" + key.html).then(function (html) {\n\t\t\t\t$scope.sensorHTML = $sce.trustAsHtml(html);\n\t\t\t});\n\t\t}\n\t\t//$scope.HTML = $scope.HTML + $templateCache.get(\"html/\" + key.html);\n\t\t/*\n  \t\t// DOM: Create the script element\n  \t    var jsElm = document.createElement(\"script\");\n  \t    // set the type attribute\n  \t    jsElm.type = \"application/javascript\";\n  \t    // make the script element load file\n  \t    jsElm.src = \"scripts/\" + key.script;\n  \t    // finally insert the element to the body element in order to load the script\n  \t    document.body.appendChild(jsElm);\n  \n  \n  \t\tjsElm.onload = function() {\n  \n  \t\t};*/\n\t\t//inject.js(\"scripts/\" + key.script, function() {\n\t\tvar sensor = new window[key.feature](sandbox);\n\t\tsensors.push(sensor);\n\t\t//});\n\t});\n\n\t$scope.timerRunning = false;\n\n\t$scope.start = function (deadline) {\n\t\t$scope.$broadcast('timer-start');\n\t\t$scope.timerRunning = true;\n\t\tsensors.forEach(function (sensor) {\n\t\t\tsensor.start();\n\t\t});\n\t};\n\n\t$scope.stop = function () {\n\t\tconsole.log(\"stop\");\n\t\t$scope.timerRunning = false;\n\t\tsensors.forEach(function (sensor) {\n\t\t\tsensor.stop();\n\t\t\tdelete window.sensor;\n\t\t});\n\t\t$location.path(\"/sensor\");\n\t};\n};\n\nmodule.exports = exports['default'];\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nexports['default'] = labelFilter;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nfunction labelFilter() {\n\treturn function (input) {\n\t\tif (typeof input !== 'undefined') {\n\t\t\tvar result = [];\n\t\t\tinput.forEach(function (entry) {\n\t\t\t\tif (entry.value === true) {\n\t\t\t\t\tresult.concat(entry.sensors);\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult = [].concat(_toConsumableArray(new Set(result)));\n\t\t\tvar sensors = [];\n\t\t\tresult.forEach(function (entry) {\n\t\t\t\tvar sensor = {};\n\t\t\t\tsensor.name = entry;\n\t\t\t\tsensor.support = Modernizr[entry];\n\t\t\t\tsensors.push(sensor);\n\t\t\t});\n\t\t\tconsole.log(sensors);\n\t\t\treturn sensors;\n\t\t}\n\t};\n}\n\nmodule.exports = exports['default'];\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nexports['default'] = sensorFilter;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\nfunction sensorFilter() {\n\treturn function (input) {\n\t\tif (typeof input !== 'undefined') {\n\t\t\tvar result = [];\n\t\t\tinput.forEach(function (entry) {\n\t\t\t\tif (entry.value === true) {\n\t\t\t\t\tresult.push(entry.feature);\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult = [].concat(_toConsumableArray(new Set(result)));\n\t\t\tvar sensors = [];\n\t\t\tresult.forEach(function (entry) {\n\t\t\t\tvar sensor = {};\n\t\t\t\tsensor.name = entry;\n\t\t\t\tsensor.support = Modernizr[entry];\n\t\t\t\tsensors.push(sensor);\n\t\t\t});\n\t\t\tconsole.log(sensors);\n\t\t\treturn sensors;\n\t\t}\n\t};\n}\n\nmodule.exports = exports['default'];\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar ModelService = (function () {\n\n    /*@ngInject*/\n\n    function ModelService($http, $q) {\n        _classCallCheck(this, ModelService);\n\n        this.$http = $http;\n        this.$q = $q;\n    }\n\n    _createClass(ModelService, [{\n        key: 'getFeatures',\n        value: function getFeatures() {\n            var deferred = this.$q.defer();\n            this.$http.get('http://docker.teco.edu:3000/api/features').then(function (data) {\n                deferred.resolve(data);\n            });\n\n            return deferred.promise;\n        }\n    }, {\n        key: 'getLabels',\n        value: function getLabels() {\n            var deferred = this.$q.defer();\n            this.$http.get('http://docker.teco.edu:3000/api/labels').then(function (data) {\n                deferred.resolve(data);\n            });\n\n            return deferred.promise;\n        }\n    }]);\n\n    return ModelService;\n})();\n\nexports['default'] = ModelService;\nmodule.exports = exports['default'];\n\n},{}]},{},[1])\n\n","/*\n  Import all Angular components via ES6 imports and register them\n  at your module via their corresponding functions (controller, service, etc.).\n  Copyright 2016 KIT Institute for Telematics TecO - David Greiner\n*/\n\nimport ButtonsCtrl from './controllers/ButtonsCtrl';\nimport SensorCtrl from './controllers/SensorCtrl';\nimport ModelService from './services/ModelService';\nimport sensorFilter from './filters/sensorFilter';\nimport labelFilter from './filters/labelFilter';\n\nangular.module('myApp', ['ui.bootstrap', 'ui.router', 'ngTagsInput', 'timer'])\n\t.service('ModelService', ModelService)\n\t.controller('ButtonsCtrl', ButtonsCtrl)\n\t.controller('SensorCtrl', SensorCtrl)\n\t.filter('sensor', sensorFilter)\n\t.filter('label', labelFilter)\n\t.service('sharedConfig', function () {\n        var features = {};\n        var labels = {};\n\n        return {\n            getFeatures: function () {\n                return features;\n            },\n            getLabels: function () {\n                return labels;\n            },\n            setConfig: function(_features, _labels) {\n                features = _features;\n                labels = _labels;\n            }\n        };\n\t })\n\t.config(['$httpProvider', '$stateProvider', '$urlRouterProvider',\n  function($httpProvider, $stateProvider, $urlRouterProvider) {\n\n    $stateProvider\n      .state('collect', {\n        url: '/collect',\n        templateUrl: 'collect.html',\n        controller: 'ButtonsCtrl'\n      })\n      .state('sensor', {\n        url: '/sensor',\n        templateUrl: 'sensor.html',\n        controller: 'SensorCtrl',\n      });\n\n    $urlRouterProvider.otherwise('/collect');\n  }\n]);\n","export default function($scope, $filter, $location, ModelService, sharedConfig) {\n  'ngInject';\n\n\n  $scope.ua = detect.parse(navigator.userAgent);\n\n\n  $scope.features = [];\n  $scope.sensors = [];\n\n  ModelService.getFeatures().then(function(data) {\n    $scope.features = data;\n    $scope.sensors = $filter('sensor')($scope.features.data);\n  });\n\n  $scope.$watch('features', function(newVal, oldVal, scope) {\n    $scope.sensors = $filter('sensor')($scope.features.data);\n  }, true);\n\n\n  function machineReadableString(string) {\n    return string.replace(/([^a-z0-9]+)/gi, '-').toLowerCase();\n  }\n\n  $scope.labels = [];\n\n  $scope.loadLabels = function($query) {\n    return ModelService.getLabels().then(function(response) {\n      var labels = response.data;\n      return labels.filter(function(label) {\n        return label.name.toLowerCase().indexOf($query.toLowerCase()) != -1;\n      });\n    });\n  };\n\n\n  $scope.next = function() {\n    var labels = [];\n    $scope.labels.forEach(function(label, index) {\n      if (typeof label.label === 'undefined') {\n        $scope.labels[index].label = machineReadableString(label.name);\n        var data = {\n          label: label.label,\n          name: label.name\n        };\n        var json = JSON.stringify(data);\n        if (json !== '{}') {\n          var req = new XMLHttpRequest();\n          req.open('POST', \"http://docker.teco.edu:3000/api/labels\");\n          req.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n          req.send(json);\n        }\n      }\n      labels.push(label.label);\n    });\n\n    var features = $filter('filter')($scope.features.data, {\n      value: true\n    });\n\n    sharedConfig.setConfig(features, labels);\n    $location.path(\"/sensor\");\n  };\n\n}\n","export default function($scope, $filter, $location, $templateRequest, $sce, sharedConfig) {\n\t'ngInject';\n\n\tvar features = sharedConfig.getFeatures();\n\tvar labels = sharedConfig.getLabels();\n\n\tconsole.log(features);\n\n\tvar pr = '', en = false, uniqid;\n\n\tthis.seed = function (s, w) {\n\t\ts = parseInt(s, 10).toString(16);\n\t\treturn w < s.length ? s.slice(s.length - w) : (w > s.length) ? new Array(1 + (w - s.length)).join('0') + s : s;\n\t};\n\n\tuniqid = pr + this.seed(parseInt(new Date().getTime() / 1000, 10), 8) + this.seed(Math.floor(Math.random() * 0x75bcd15) + 1, 5);\n\n\tif (en) uniqid += (Math.random() * 10).toFixed(8).toString();\n\n\tvar ua = detect.parse(navigator.userAgent);\n\n\tvar sandbox = {\n\t\tsend: function(data) {\n\t\t\tconsole.log(data);\n\t\t\tdata.id = uniqid;\n\t\t\tdata.timestamp = Date.now();\n\t\t\tdata.useragent = ua.device.manufacturer + \"_\" + ua.device.name + \"_\" + ua.browser.family + \"_\" + ua.browser.major;\n\t\t\tlabels.forEach(function(label) {\n\t\t\t\tdata.label = label;\n\t\t\t\tvar json = JSON.stringify(data);\n\t\t\t\tif(json !== '{}') {\n\t\t\t\t\tvar req = new XMLHttpRequest();\n\t\t\t\t\treq.open('POST', \"http://docker.teco.edu:3000/api/features/\" + data.sensor);\n\t\t\t\t\treq.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\n\t\t\t\t\treq.send(json);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n\n\t$scope.HTML = \"\";\n\n\tvar sensors = [];\n\n\tfeatures.forEach(function(key) {\n\t\tif (typeof(key.html) != \"undefined\" && key.html !== \"\")\n\t\t{\n\t\t\tconsole.log(\"html/\" + key.html);\n\n\t\t\t$templateRequest(\"html/\" + key.html).then(function(html){\n\t\t                $scope.sensorHTML = $sce.trustAsHtml(html);\n\t\t\t});\n\t\t}\n\t\t//$scope.HTML = $scope.HTML + $templateCache.get(\"html/\" + key.html);\n/*\n\t\t// DOM: Create the script element\n\t    var jsElm = document.createElement(\"script\");\n\t    // set the type attribute\n\t    jsElm.type = \"application/javascript\";\n\t    // make the script element load file\n\t    jsElm.src = \"scripts/\" + key.script;\n\t    // finally insert the element to the body element in order to load the script\n\t    document.body.appendChild(jsElm);\n\n\n\t\tjsElm.onload = function() {\n\n\t\t};*/\n\t\t//inject.js(\"scripts/\" + key.script, function() {\n\t\t\tvar sensor = new window[key.feature](sandbox);\n\t\t\tsensors.push(sensor);\n    \t//});\n\t});\n\n\t$scope.timerRunning = false;\n\n\t$scope.start = function (deadline) {\n\t\t$scope.$broadcast('timer-start');\n\t\t$scope.timerRunning = true;\n\t\tsensors.forEach(function(sensor) {\n\t\t\tsensor.start();\n\t\t});\n\t};\n\n\t$scope.stop = function () {\n\t\tconsole.log(\"stop\");\n\t\t$scope.timerRunning = false;\n\t\tsensors.forEach(function(sensor) {\n\t\t\tsensor.stop();\n\t\t\tdelete window.sensor;\n\t\t});\n\t\t$location.path(\"/sensor\");\n\t};\n\n}\n","export default function labelFilter() {\n\treturn function(input) {\n\t\tif (typeof input !== 'undefined') {\n\t\t\tvar result = [];\n\t\t\tinput.forEach(function(entry) {\n\t\t\t\tif(entry.value === true) {\n\t\t\t\t\tresult.concat(entry.sensors);\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult = [...new Set(result)];\n\t\t\tvar sensors = [];\n\t\t\tresult.forEach(function(entry) {\n\t\t\t\tvar sensor = {};\n\t\t\t\tsensor.name = entry;\n\t\t\t\tsensor.support = Modernizr[entry];\n\t\t\t\tsensors.push(sensor);\n\t\t\t});\n\t\t\tconsole.log(sensors);\n\t\t\treturn sensors;\n\t\t}\n\t};\n}\n","export default function sensorFilter() {\n\treturn function(input) {\n\t\tif (typeof input !== 'undefined') {\n\t\t\tvar result = [];\n\t\t\tinput.forEach(function(entry) {\n\t\t\t\tif(entry.value === true) {\n\t\t\t\t\tresult.push(entry.feature);\n\t\t\t\t}\n\t\t\t});\n\t\t\tresult = [...new Set(result)];\n\t\t\tvar sensors = [];\n\t\t\tresult.forEach(function(entry) {\n\t\t\t\tvar sensor = {};\n\t\t\t\tsensor.name = entry;\n\t\t\t\tsensor.support = Modernizr[entry];\n\t\t\t\tsensors.push(sensor);\n\t\t\t});\n\t\t\tconsole.log(sensors);\n\t\t\treturn sensors;\n\t\t}\n\t};\n}","export default class ModelService {\n\n\t/*@ngInject*/\n    constructor($http, $q) {\n        this.$http = $http;\n        this.$q = $q;\n    }\n        \n    getFeatures() {\n    \tvar deferred = this.$q.defer();\n\t    this.$http.get('http://docker.teco.edu:3000/api/features').then(function(data)\n\t    {\n\t\t    deferred.resolve(data);\n\t\t});\n\n        return deferred.promise;\n    }\n    getLabels() {\n\t    var deferred = this.$q.defer();\n\t    this.$http.get('http://docker.teco.edu:3000/api/labels').then(function(data)\n\t    {\n\t\t    deferred.resolve(data);\n\t\t});\n\n        return deferred.promise;\n    }\n}"],"sourceRoot":"/source/"}